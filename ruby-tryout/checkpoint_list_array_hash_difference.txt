リスト: 
リストは複数の要素を順番付きのデータコンテナを定義します。リストは抽象データ型です。抽象データ型としてデータはどのように操作できるかと指しています。基本的にリストデータ型によると例の機能は：要素を順番つきに取得する操作、先頭と後尾に新しい要素を追加する操作、先頭を求める操作等。リスト抽象データ型の実装方法は連結リストと動的配列です。

配列：
配列はデータ構造です。データ構造はデータが具体的にどのように格納されるかと指します。データ構造は抽象データ型の実装です。配列データ構造によると複数の要素が通常に連続のメモリアドレスに一緒に格納されます。その次第に、配列はインデックスによって要素の取得ができます。

ハッシュ：
ハッシュは一般的に連想配列と呼ばれます。抽象データ型です。連想配列ではキーを使って要素が格納されます。例えばは文字列型等をキーにすることができます。ハッシュテーブルというデータ構造で連想配列が実装できます。

リストと配列の違い：
リストはただ抽象データ型で、データにどのような操作をできるかと言いますが、その操作の実装とデータの具体的な格納する方法を定義しません。一方、配列はデータ構造であり、データの格納方法を定義します。配列ではインデックスによって直接に要素を取得できますが、この機能はリストに必ずあるというわけではありません。例えば連結リストのようなリストではインデックスによって要素の取得は不可能です。

配列とハッシュの違い：
配列は添え字には非負整数だけで要素の定義と取得ができますが、ハッシュは文字列のような他のデータ型をキーにして要素の定義と取得が定数時間O(1)にできます。ハッシュテーブルは配列のように要素を連続メモリアドレスに格納しません。
