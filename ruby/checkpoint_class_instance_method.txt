インスタンス変数とクラスの関係：
インスタンス変数はクラスの名前で参照できません。なぜなら、インスタンス変数はクラスを定義する際に生成されません。インスタンス変数はクラスのオブジェクトを作る際に生成されます。なので、インスタンス変数は属するオブジェクトの名前だけで参照できます。
一つのクラスのオブジェクトはそれぞれの変数を持っています。変数の名前は同じですが、属するオブジェクトが異なって格納された値が異なります。
クラスのオブジェクトはそのクラスのインスタンスと呼ばれるのでインスタンス変数の名前にはインスタンスがあります。

クラスとメソッドの関係：
インスタンス変数のように、普通のメソッドはオブジェクトだけで呼び出すことができます。その理由は、オブジェクト指向プログラミングの論理によると、メソッドはオブジェクトのデータを管理するために存在します。なので、オブジェクトがなければ場合、メソッドを呼び出すことは無意味です。
インスタンス変数はオブジェクトを作る際に生成されますが、メソッドは一度だけ定義されます。要するに、複数のオブジェクトがそれぞれのメソッドを持たなくて、クラスに定義されたメソッドを共有します。メソッドはクラスに定義されるのに、クラス名前だけで呼び出すことはできません。
でも、クラスメソッドの場合は、オブジェクトがなくても、クラス名前でメソッドを呼び出すことができます。このクラスメソッドは普通にクラスに直接に属するクラス変数の管理を行うために使用されます。

インスタンス変数とメソッドの関係：
メソッドはインスタンス変数を取得と変更するインターフェイスとなります。メソッドでオブジェクトのインスタンス変数に値を代入したり、変数を参照したりことができます。Rubyではオブジェクトの変数は直接に参照できなくて、メソッドだけを通して参照できます。
